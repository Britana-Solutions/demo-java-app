name: Deploy application to Staging

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        target: ["staging"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install xmlstarlet
        run: sudo apt-get update && sudo apt-get install -y xmlstarlet
      - name: Run xmlstarlet command
        run: xmlstarlet --version
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      - name: Maven packaging
        run: |
          DBURL=$(aws ssm get-parameter --name "/${{ matrix.target }}/DBURL"  \
              --query "Parameter.Value" --output text --with-decryption)

          xmlstarlet ed --inplace \
            --update '/hibernate-configuration/session-factory/property[@name="hibernate.connection.url"]' \
            -v "$DBURL" "src/main/resources/hibernate.cfg.xml"
          
          DBUSER=$(aws ssm get-parameter --name "/${{ matrix.target }}/DBUSER"  \
              --query "Parameter.Value" --output text --with-decryption)
               
          xmlstarlet ed --inplace \
             --update '/hibernate-configuration/session-factory/property[@name="hibernate.connection.username"]' \
             -v "$DBUSER" "src/main/resources/hibernate.cfg.xml"               
          
          DBPASS=$(aws ssm get-parameter --name "/${{ matrix.target }}/DBPASS"  \
              --query "Parameter.Value" --output text --with-decryption)
             
          xmlstarlet ed --inplace \
             --update '/hibernate-configuration/session-factory/property[@name="hibernate.connection.password"]' \
             -v "$DBPASS" "src/main/resources/hibernate.cfg.xml"
               
          mvn clean package

      - name: Archive WAR file
        uses: actions/upload-artifact@v4
        with:
          name: war-file-${{ matrix.target }}
          path: target/*.war

  deploy:
    strategy:
      matrix:
        target: ["staging"]
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download war files
        uses: actions/download-artifact@v4
        with:
          name: war-file-${{ matrix.target }}
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v4
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-southeast-2
#          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
#          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
#          role-duration-seconds: 1200
#          role-session-name: MySessionName
#      - name: Upload war file to S3
#        run: |
#          aws s3 cp my-web-app.war s3://java-demo-deployment/${{ matrix.target }}-${{ github.sha }}.war
#      - name: Create EB app version
#        run: |
#          aws elasticbeanstalk create-application-version \
#            --application-name java-demo \
#            --version-label ${{ matrix.target }}.${{ github.sha }} \
#            --source-bundle "S3Bucket=java-demo-deployment,S3Key=${{ matrix.target }}-${{ github.sha }}.war" \
#            --description "Deploying ${{ github.sha }}"
#      - name: Update EB target
#        run: |
#          aws elasticbeanstalk update-target --target-name Java-demo-dev-env --version-label ${{ github.sha }}


