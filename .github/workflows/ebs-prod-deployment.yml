name: Deploy application to Production

on:
#  schedule:
#    - cron: '0 2 * * *'  # UTC based
  push:
    branches: [ "main" ]


jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_BUILD_TIMEOUT) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-war-file
        with:
          environment: production
          github-token: ${{ secrets.GH_TOKEN }}

  config:
    strategy:
      matrix:
        target: [
          BTC-100-PROD,
          BTC-200-PROD,
          BTC-300-PROD
        ]
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_CONFIG_TIMEOUT) }}
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/create-eb-deployment
        with:
          environment: staging
          target: ${{ matrix.target }}
          github-token: ${{ secrets.GH_TOKEN }}
          war-base-filename: BTC-1.0.0

  deploy:
    environment: PRODUCTION
    strategy:
      matrix:
        target: [
          BTC-100-PROD,
          BTC-200-PROD,
          BTC-300-PROD
        ]
    runs-on: ubuntu-latest
    timeout-minutes: ${{ fromJSON(vars.DEFAULT_DEPLOY_TIMEOUT) }}
    needs: [ config, build ]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/deployment-approval
        with:
          branch: ${{ github.ref }}
          app-name: BGS
          github-token: ${{ secrets.GH_TOKEN }}
      - uses: ./.github/actions/push-deployment-to-eb
        with:
          target: ${{ matrix.target }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
          application-name-prefix: ${{ matrix.target }}
          environment-name-prefix: ${{ matrix.target }}
          package-filename: BTC-1.0.0-${{ matrix.target }}.war
          wait-for-eb-deployment: false
